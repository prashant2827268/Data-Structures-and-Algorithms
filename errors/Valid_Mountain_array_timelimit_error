Here in this I got timelimit error because of O(n^2) complexity

class Solution {
    public boolean validMountainArray(int[] arr) {
        int n = arr.length;
        if(n<3){
            return false;
        }

        int count = 0;
        int left = 0;
        int right = n-1;
        while(left < right){
            while(arr[left+1] != arr[right] && arr[left] < arr[left+1] )
            {
                left++;
            }
            while(arr[left] != arr[right] && arr[right] < arr[right-1] )
            {
                right--;
            }
        }
        if(left == right){
            return true;
        }else{
            return false;
        }
        
    }
}


** Here in this I tried to cut down the time complexity from O(N^2) to O(N) but my solution failed on a case [2,0,2]
class Solution {
    public boolean validMountainArray(int[] arr) {
        int n = arr.length;
        if(n<3){
            return false;
        } 
        int left = 0;
        int right = 0;
        for(int i = 0; i< n-1;i++){
            if(arr[i]<arr[i+1]){
                left++;
                continue;
            }else if(arr[i] > arr[i+1]){
                right++;
                continue;

            }
            else{
                return false;
            }
        }

        if(left == n-1 || right == n-1){
            return false;
        }
        return true;

      
    }
}
